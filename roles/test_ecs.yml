# Ansible Module Name - ECS
# This Playbook contains test scenario for ecs.py module.
# Playbook created by : Shrutika M

- name: Testing create, start, stop, restart or terminate an Instance in ECS
  hosts: localhost
  connection: local
  vars:
    #acs_access_key: LTAIV7yukr6Csf14
    #acs_secret_access_key: it9TEJcJvnDyL5uB830fx1BQwzdNdd
    region: cn-hongkong
    zone: cn-hongkong-b
    image: ubuntu_140405_64_40G_cloudinit_20161115.vhd
    type: ecs.n1.tiny
    instance_name: travis-ansible-instance
    description: travis-ansible-instance
  tasks:
    - name: Creating an ECS instance
      ecs:
        #acs_access_key: '{{ acs_access_key }}'
        #acs_secret_access_key: '{{ acs_secret_access_key }}'
        region: '{{ region }}'
        zone: '{{ zone }}'
        image: '{{ image }}'
        type: '{{ type }}'
        instance_name: '{{ instance_name }}'
        description: '{{ description }}'
      register: createinstanceresult
    - debug: var=createinstanceresult

    - pause:
        seconds: 30

    - name: Stopping ECS instance
      ecs:
        #acs_access_key: '{{ acs_access_key }}'
        #acs_secret_access_key: '{{ acs_secret_access_key }}'
        region: '{{ region }}'
        instance_ids:
          - '{{ createinstanceresult.result[0].instance_id }}'
        state: 'stopped'
      register: stopresult
    - debug: var=stopresult

    - pause:
        seconds: 30

    - name: Starting ECS instance
      ecs:
        #acs_access_key: '{{ acs_access_key }}'
        #acs_secret_access_key: '{{ acs_secret_access_key }}'
        region: '{{ region }}'
        instance_ids:
          - '{{ createinstanceresult.result[0].instance_id }}'
        state: 'running'
      register: startresult
    - debug: var=startresult

    - pause:
        seconds: 30

    - name: Restarting ECS instance
      ecs:
        #acs_access_key: '{{ acs_access_key }}'
        #acs_secret_access_key: '{{ acs_secret_access_key }}'
        region: '{{ region }}'
        instance_ids:
          - '{{ createinstanceresult.result[0].instance_id }}'
        state: 'restarted'
      register: restartresult
    - debug: var=restartresult

    # Terminate instance is not working as expected. Feature is not part of scope of ASPEN-I
    #- pause:
    #    seconds: 30

    #- name: Terminating ECS instance
    #  ecs:
    #    acs_access_key: '{{ acs_access_key }}'
    #    acs_secret_access_key: '{{ acs_secret_access_key }}'
    #    region: '{{ region }}'
    #    instance_ids:
    #      - '{{ createinstanceresult.result[0].instance_id }}'
    #    state: 'absent'
    #  register: absentresult
    #- debug: var=absentresult